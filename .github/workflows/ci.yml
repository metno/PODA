name: Continuous integration

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed

jobs:
  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Run cargo check
        run: cargo check

      - name: Formatting check
        run: cargo fmt --all -- --check

      - name: Build
        run: cargo build --workspace --tests

      - name: Lint
        run: cargo clippy --workspace -- -D warnings

      - name: Prepare PostgreSQL
        run: target/debug/prepare_postgres

      - name: Run unit and integration tests
        run: cargo test --no-fail-fast -- --nocapture --test-threads=1

      - name: Setup Go 1.22.x
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          cache-dependency-path: migrations/go.sum

      - name: Install Go dependencies
        working-directory: migrations
        run: go get

      - name: Build migration package
        working-directory: migrations
        run: go build -v ./...

      - name: Run Go tests
        working-directory: migrations
        run: go test -v ./...
